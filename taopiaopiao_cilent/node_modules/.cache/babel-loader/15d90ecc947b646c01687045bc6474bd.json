{"ast":null,"code":"import _defineProperty from \"E:\\\\H5\\\\react\\\\taopiaopiao\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\H5\\\\react\\\\taopiaopiao\\\\src\\\\components\\\\List.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint no-dupe-keys: 0 */\nimport React from 'react';\nimport './List.css';\nimport { ListView } from 'antd-mobile';\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataBlob = {};\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    const ii = pIndex * NUM_ROWS + i;\n    dataBlob[\"\".concat(ii)] = \"row - \".concat(ii);\n  }\n\n  return dataBlob;\n}\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onEndReached = event => {\n      // load new data\n      // hasMore: from backend data, indicates whether it is the last page, here is false\n      if (this.state.isLoading && !this.state.hasMore) {\n        return;\n      }\n\n      console.log('reach end', event);\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(() => {\n        this.rData = _objectSpread({}, this.rData, {}, genData(++pageIndex));\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(this.rData),\n          isLoading: false\n        });\n      }, 1000);\n    };\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    });\n    this.state = {\n      dataSource,\n      isLoading: true,\n      data: [{\n        img: 'https://gw.alicdn.com/i1/TB1J0Hkk.Y1gK0jSZFMXXaWcVXa_.jpg_160x160Q30s100.jpg_.webp',\n        title: '冰雪奇缘2',\n        mark: '暂无评分',\n        director: '巴克',\n        actor: '贝尔',\n        des: '不是所有的兼职汪都需要风吹日晒'\n      }, {\n        img: 'https://gw.alicdn.com/i4/TB1gxsmmhz1gK0jSZSgXXavwpXa_.jpg_160x160Q30s100.jpg_.webp',\n        title: '你是凶手',\n        mark: '8.2',\n        director: '王立',\n        actor: '王千源 宋佳',\n        des: '不是所有的兼职汪都需要风吹日晒'\n      }, {\n        img: 'https://gw.alicdn.com/i4/TB1FwROmq61gK0jSZFlXXXDKFXa_.jpg_160x160Q30s100.jpg_.webp',\n        title: '触不可及',\n        mark: '9.1',\n        director: '尼尔·博格',\n        actor: '布莱恩·科兰斯顿',\n        des: '不是所有的兼职汪都需要风吹日晒'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false\n      });\n    }, 600);\n  } // If you use redux, the data maybe at props, you need use `componentWillReceiveProps`\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.dataSource !== this.props.dataSource) {\n  //     this.setState({\n  //       dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource),\n  //     });\n  //   }\n  // }\n\n\n  render() {\n    const separator = (sectionID, rowID) => React.createElement(\"div\", {\n      key: \"\".concat(sectionID, \"-\").concat(rowID),\n      style: {\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    });\n\n    let index = 0;\n\n    const row = (rowData, sectionID, rowID) => {\n      if (index <= this.state.data.length) {\n        const obj = this.state.data[index++];\n        return React.createElement(\"div\", {\n          key: rowID,\n          style: {\n            padding: '0 15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            lineHeight: '50px',\n            color: '#000',\n            fontSize: 18,\n            borderBottom: '1px solid #F6F6F6'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, obj.title), React.createElement(\"div\", {\n          style: {\n            display: '-webkit-box',\n            display: 'flex',\n            padding: '15px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: {\n            height: '100px',\n            marginRight: '15px'\n          },\n          src: obj.img,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            lineHeight: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            fantSize: '13px',\n            color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"\\u8BC4\\u5206\\uFF1A\", obj.mark), React.createElement(\"div\", {\n          style: {\n            marginBottom: '8px',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"\\u5BFC\\u6F14\\uFF1A\", obj.director), React.createElement(\"div\", {\n          style: {\n            marginBottom: '8px',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"\\u4E3B\\u6F14\\uFF1A\", obj.actor))));\n      }\n    };\n\n    return React.createElement(ListView, {\n      ref: el => this.lv = el,\n      initialListSize: this.state.data.length,\n      dataSource: this.state.dataSource,\n      renderHeader: () => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"header\"),\n      renderFooter: () => React.createElement(\"div\", {\n        style: {\n          padding: 30,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.isLoading ? 'Loading...' : 'Loaded'),\n      renderRow: row,\n      renderSeparator: separator,\n      className: \"am-list\",\n      pageSize: 4,\n      useBodyScroll: true,\n      onScroll: () => {\n        console.log('scroll');\n      },\n      scrollRenderAheadDistance: 500,\n      onEndReached: this.onEndReached,\n      onEndReachedThreshold: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["E:/H5/react/taopiaopiao/src/components/List.js"],"names":["React","ListView","NUM_ROWS","pageIndex","genData","pIndex","dataBlob","i","ii","List","Component","constructor","props","onEndReached","event","state","isLoading","hasMore","console","log","setState","setTimeout","rData","dataSource","cloneWithRows","DataSource","rowHasChanged","row1","row2","data","img","title","mark","director","actor","des","componentDidMount","render","separator","sectionID","rowID","backgroundColor","height","borderTop","borderBottom","index","row","rowData","length","obj","padding","lineHeight","color","fontSize","display","marginRight","marginBottom","fontWeight","fantSize","el","lv","textAlign"],"mappings":"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","sourcesContent":["/* eslint no-dupe-keys: 0 */\r\nimport React from 'react';\r\nimport './List.css'\r\nimport { ListView } from 'antd-mobile';\r\n\r\n\r\nconst NUM_ROWS = 20;\r\nlet pageIndex = 0;\r\n\r\nfunction genData(pIndex = 0) {\r\n    const dataBlob = {};\r\n    for (let i = 0; i < NUM_ROWS; i++) {\r\n        const ii = (pIndex * NUM_ROWS) + i;\r\n        dataBlob[`${ii}`] = `row - ${ii}`;\r\n    }\r\n    return dataBlob;\r\n}\r\n\r\nexport default class List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n        });\r\n\r\n        this.state = {\r\n            dataSource,\r\n            isLoading: true,\r\n            data: [\r\n                {\r\n                    img: 'https://gw.alicdn.com/i1/TB1J0Hkk.Y1gK0jSZFMXXaWcVXa_.jpg_160x160Q30s100.jpg_.webp',\r\n                    title: '冰雪奇缘2',\r\n                    mark:'暂无评分',\r\n                    director:'巴克',\r\n                    actor:'贝尔',\r\n                    des: '不是所有的兼职汪都需要风吹日晒',\r\n                },\r\n                {\r\n                    img: 'https://gw.alicdn.com/i4/TB1gxsmmhz1gK0jSZSgXXavwpXa_.jpg_160x160Q30s100.jpg_.webp',\r\n                    title: '你是凶手',  \r\n                    mark:'8.2',       \r\n                    director:'王立', \r\n                    actor:'王千源 宋佳',          \r\n                    des: '不是所有的兼职汪都需要风吹日晒',\r\n                },\r\n                {\r\n                    img: 'https://gw.alicdn.com/i4/TB1FwROmq61gK0jSZFlXXXDKFXa_.jpg_160x160Q30s100.jpg_.webp',\r\n                    title: '触不可及',\r\n                    mark:'9.1',\r\n                    director:'尼尔·博格',\r\n                    actor:'布莱恩·科兰斯顿',\r\n                    des: '不是所有的兼职汪都需要风吹日晒',\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                isLoading: false,\r\n            });\r\n        }, 600);\r\n    }\r\n\r\n    // If you use redux, the data maybe at props, you need use `componentWillReceiveProps`\r\n    // componentWillReceiveProps(nextProps) {\r\n    //   if (nextProps.dataSource !== this.props.dataSource) {\r\n    //     this.setState({\r\n    //       dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource),\r\n    //     });\r\n    //   }\r\n    // }\r\n\r\n    onEndReached = (event) => {\r\n        // load new data\r\n        // hasMore: from backend data, indicates whether it is the last page, here is false\r\n        if (this.state.isLoading && !this.state.hasMore) {\r\n            return;\r\n        }\r\n        console.log('reach end', event);\r\n        this.setState({ isLoading: true });\r\n        setTimeout(() => {\r\n            this.rData = { ...this.rData, ...genData(++pageIndex) };\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                isLoading: false,\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const separator = (sectionID, rowID) => (\r\n            <div\r\n                key={`${sectionID}-${rowID}`}\r\n                style={{\r\n                    backgroundColor: '#F5F5F9',\r\n                    height: 8,\r\n                    borderTop: '1px solid #ECECED',\r\n                    borderBottom: '1px solid #ECECED',\r\n                }}\r\n            />\r\n        );\r\n        let index = 0;\r\n        const row = (rowData, sectionID, rowID) => {\r\n            if (index <= this.state.data.length) {\r\n                const obj = this.state.data[index++];\r\n                return (\r\n                    <div key={rowID} style={{ padding: '0 15px' }}>\r\n                        <div\r\n                            style={{\r\n                                lineHeight: '50px',\r\n                                color: '#000',\r\n                                fontSize: 18,\r\n                                borderBottom: '1px solid #F6F6F6',\r\n                            }}\r\n                        >{obj.title}</div>\r\n                        <div style={{ display: '-webkit-box', display: 'flex', padding: '15px 0' }}>\r\n                            <img style={{ height: '100px', marginRight: '15px' }} src={obj.img} alt=\"\" />\r\n                            <div style={{ lineHeight: 1 }}>\r\n                                <div style={{ marginBottom: '8px', fontWeight: 'bold',fantSize:'13px',color }}>评分：{obj.mark}</div>\r\n                                <div style={{ marginBottom: '8px', fontWeight: 'bold' }}>导演：{obj.director}</div>\r\n                                <div style={{ marginBottom: '8px', fontWeight: 'bold' }}>主演：{obj.actor}</div>\r\n                                {/* <div><span style={{ fontSize: '30px', color: '#FF6E27' }}>{rowID}</span>¥</div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        };\r\n        return (\r\n            <ListView\r\n                ref={el => this.lv = el}\r\n                initialListSize={this.state.data.length}\r\n                dataSource={this.state.dataSource}\r\n                renderHeader={() => <span>header</span>}\r\n                renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\r\n                    {this.state.isLoading ? 'Loading...' : 'Loaded'}\r\n                </div>)}\r\n                renderRow={row}\r\n                renderSeparator={separator}\r\n                className=\"am-list\"\r\n                pageSize={4}\r\n                useBodyScroll\r\n                onScroll={() => { console.log('scroll'); }}\r\n                scrollRenderAheadDistance={500}\r\n                onEndReached={this.onEndReached}\r\n                onEndReachedThreshold={10}\r\n            />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}