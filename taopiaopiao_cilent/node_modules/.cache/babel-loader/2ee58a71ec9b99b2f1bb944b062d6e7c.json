{"ast":null,"code":"var _jsxFileName = \"E:\\\\H5\\\\react\\\\taopiaopiao\\\\src\\\\components\\\\HotShow.js\";\nimport React, { Component } from 'react';\nimport { Tabs, Badge } from 'antd-mobile';\nimport $ from 'jquery';\nimport './HotShow.css';\nimport List from './List';\nexport default class HotShow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      list1: [],\n      list2: []\n    };\n  }\n\n  componentDidMount() {\n    let that = this;\n    $.ajax({\n      url: \"http://localhost:9000/getindex\",\n      type: \"GET\",\n      dataType: \"text\",\n\n      success(data) {\n        if (data) {\n          data = JSON.parse(data);\n          that.setState({\n            data: data\n          });\n        }\n      },\n\n      error() {}\n\n    });\n  }\n\n  tabExample() {\n    const tabs = [{\n      title: React.createElement(Badge, {\n        text: '3',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"\\u6B63\\u5728\\u70ED\\u6620\")\n    }, {\n      title: React.createElement(Badge, {\n        text: '4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"\\u5373\\u5C06\\u4E0A\\u6620\")\n    }]; //所有的电影列表\n\n    let movielist = this.state.data; //已经上映的电影\n\n    let list1 = []; //未上映的电影\n\n    let list2 = [];\n    let year = new Date().getFullYear();\n    let month = new Date().getMonth() + 1;\n    let date = new Date().getDate(); // console.log(year)\n\n    if (movielist != null) {\n      for (let i = 0; i < movielist.length; i++) {\n        let movieYear = Number(movielist[i].moviedate.substring(0, 4));\n        let movieMonth = Number(movielist[i].moviedate.substring(5, 7));\n        let moviedate = Number(movielist[i].moviedate.substring(8, 10)) + 1;\n\n        if (movieYear > year) {\n          list2.push(movielist[i]);\n        } else if (movieYear < year) {\n          list1.push(movielist[i]);\n        } else {\n          if (movieMonth > month) {\n            list2.push(movielist[i]);\n          } else if (movieMonth < month) {\n            list1.push(movielist[i]);\n          } else {\n            if (moviedate > date) {\n              list2.push(movielist[i]);\n            } else {\n              list1.push(movielist[i]);\n            }\n          }\n        }\n      }\n\n      console.log(list1);\n      console.log(list2);\n      this.setState({\n        list1: list\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      tabs: tabs,\n      initialPage: 0,\n      onChange: (tab, index) => {\n        console.log('onChange', index, tab);\n      },\n      onTabClick: (tab, index) => {\n        console.log('onTabClick', index, tab);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 'auto',\n        backgroundColor: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(List, {\n      isShow: true,\n      list: list1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 'auto',\n        backgroundColor: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return this.tabExample();\n  }\n\n}","map":{"version":3,"sources":["E:/H5/react/taopiaopiao/src/components/HotShow.js"],"names":["React","Component","Tabs","Badge","$","List","HotShow","constructor","state","data","list1","list2","componentDidMount","that","ajax","url","type","dataType","success","JSON","parse","setState","error","tabExample","tabs","title","movielist","year","Date","getFullYear","month","getMonth","date","getDate","i","length","movieYear","Number","moviedate","substring","movieMonth","push","console","log","list","tab","index","display","alignItems","justifyContent","height","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Tabs, Badge } from 'antd-mobile';\r\nimport $ from 'jquery';\r\nimport './HotShow.css';\r\nimport List from './List'\r\nexport default class HotShow extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data:null,\r\n            list1:[],\r\n            list2:[],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let that = this;\r\n        $.ajax({\r\n            url: \"http://localhost:9000/getindex\",\r\n            type: \"GET\",\r\n            dataType: \"text\",\r\n            success(data) {\r\n                if (data) {\r\n                    data = JSON.parse(data);\r\n                    that.setState({\r\n                        data: data\r\n                    })\r\n\r\n                }\r\n            },\r\n            error() {\r\n\r\n            }\r\n        })\r\n    }\r\n    tabExample() {\r\n        const tabs = [\r\n            { title: <Badge text={'3'}>正在热映</Badge> },\r\n            { title: <Badge text={'4'}>即将上映</Badge> }\r\n        ];\r\n        //所有的电影列表\r\n        let movielist = this.state.data;\r\n\r\n        //已经上映的电影\r\n        let list1 = [];\r\n        //未上映的电影\r\n        let list2 = [];\r\n        let year = new Date().getFullYear();\r\n        let month = new Date().getMonth() + 1;\r\n        let date = new Date().getDate();\r\n        // console.log(year)\r\n        if (movielist!=null) {\r\n            for (let i = 0; i < movielist.length; i++) {\r\n                let movieYear= Number( movielist[i].moviedate.substring(0,4));\r\n                let movieMonth=Number( movielist[i].moviedate.substring(5,7));\r\n                let moviedate= Number( movielist[i].moviedate.substring(8,10))+1;\r\n                if(movieYear>year){\r\n                    list2.push(movielist[i]);\r\n                }\r\n                else if(movieYear<year){\r\n                    list1.push(movielist[i]);\r\n                }\r\n                else{\r\n                    if (movieMonth>month) {\r\n                        list2.push(movielist[i]);\r\n                    }\r\n                    else if(movieMonth<month){\r\n                        list1.push(movielist[i]);\r\n                    }\r\n                    else {\r\n                        if (moviedate>date) {\r\n                            list2.push(movielist[i]);\r\n                        }\r\n                        else{\r\n                            list1.push(movielist[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            console.log(list1);\r\n            console.log(list2);\r\n            this.setState({\r\n                list1:list\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Tabs tabs={tabs}\r\n                    initialPage={0}\r\n                    onChange={(tab, index) => { console.log('onChange', index, tab); }}\r\n                    onTabClick={(tab, index) => { console.log('onTabClick', index, tab); }}\r\n                >\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: 'auto', backgroundColor: '#fff' }}>\r\n                        <List isShow={true} list={list1}></List>\r\n                    </div>\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: 'auto', backgroundColor: '#fff' }}>\r\n                        {/* <List isShow={false} list={list2}></List> */}\r\n                    </div>\r\n                </Tabs>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return this.tabExample()\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}